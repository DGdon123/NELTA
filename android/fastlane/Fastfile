# # This file contains the fastlane.tools configuration
# # You can find the documentation at https://docs.fastlane.tools
# #
# # For a list of all available actions, check out
# #
# #     https://docs.fastlane.tools/actions
# #
# # For a list of all available plugins, check out
# #
# #     https://docs.fastlane.tools/plugins/available-plugins
# #

# # Uncomment the line if you want fastlane to automatically update itself
# # update_fastlane

# default_platform(:android)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end

#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
  
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end

#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end
# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:android)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end

#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
  
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end

#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end
platform :android do
  desc "Profile image upload for member and user completed"
  gradle(
      task: 'assemble',
      build_type: 'Release'
  )
  lane :increment_version do
    latest_release = firebase_app_distribution_get_latest_release(
      app: "1:282765183722:android:743d7e84c44b9b02cbe593"
    )
    increment_version_code({ version_code: latest_release[:buildVersion].to_i + 1 })
  end
  lane :android_beta_app do
      # increment_version
      firebase_app_distribution(
          app: "1:282765183722:android:743d7e84c44b9b02cbe593",
          groups: "nelta_tester",
          # testers: "sthakrishnakumar@gmail.com, surajadkhari@gmail.com,ganessays@gmail.com,prayashbishwas@gmil.com",
        #   build_number: "2",
          release_notes: "Profile image upload for member and user completed",
          firebase_cli_path: "/usr/local/bin/firebase",
          apk_path: "../build/app/outputs/apk/release/app-release.apk",
        
      )
  end
end
